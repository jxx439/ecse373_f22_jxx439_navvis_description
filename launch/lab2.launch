<launch>

  <!-- Create an argument to determine whether to use a XACRO or URDF file. -->
  <arg name="use_xacro" default="false" />
  <arg name="use_gui" default="true" />

  <!-- What is the name of the file to use? This can be passed into the launch file.-->
  <arg if="$(arg use_xacro)" name="filename" default="lab2.xacro" />
  <arg unless="$(arg use_xacro)" name="filename" default="urdf_from_xacro.urdf" />

  <!-- The full path of the URDF file can be passed into the launch file instead.-->
  <arg name="file" default="$(find navvis_description)/urdf/$(arg filename)" />


  <!-- Use the file argument as the name of the file used lto set the /robot_description parameter on the parameter server -->
  <param if="$(arg use_xacro)" name="robot_description" command="$(find xacro)/xacro --inorder $(arg file)" />
  <param unless="$(arg use_xacro)" name="robot_description" textfile="$(arg file)" />



  <!-- Run the robot_state_publisher. -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <!-- Run RVIZ and use a specific configuration file. If RVIZ is closed, close everything. -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find navvis_description)/config/config.rviz" required="true" />

  <!-- Run the joint_state_publisher. -->
   <node if="$(arg use_gui)" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" />
   <node unless="$(arg use_gui)" pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />
    
    
    <!-- Add the ability to switch between using joint_state_publisher_gui and joint_state_publisher to the launch file. --> 
    <node unless="$(arg use_gui)" pkg="tf2_ros" type="static_transform_publisher" name="tf2_ros_wheel_left_joint" args=" 0.0 0.365 0.2 -1.57 0.0 0.0 base wheel_left_joint" />
    <node unless="$(arg use_gui)" pkg="tf2_ros" type="static_transform_publisher" name="tf2_ros_wheel_right_joint" args=" 0.0 -0.365 0.2 -1.57 0.0 0.0 base wheel_right_joint" />
    <node unless="$(arg use_gui)" pkg="tf2_ros" type="static_transform_publisher" name="tf2_ros_wheel_center_joint" args=" 0.0 -0.365 0.2 -1.57 0.0 0.0 base wheel_center_joint" />
    <node unless="$(arg use_gui)" pkg="rostopic" type="rostopic" name="rostopic" args="pub -1 /joint_states sensor_msgs/JointState '{header: {seq: 1, stamp: {secs: 1, nsecs: 0}, frame_id: 'base'}, name: ['base_wheel_left_joint', 'base_wheel_right_joint'], position: [0.0, 0.0], velocity: [0, 0], effort: [0, 0]}'"/>
    
</launch>
